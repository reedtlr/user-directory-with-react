{"version":3,"sources":["components/NavBar.js","components/SearchField.js","components/UserTable.js","utils/API.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","NavBar","classes","className","AppBar","position","Toolbar","Typography","variant","margin","width","SearchField","props","noValidate","autoComplete","TextField","onChange","handleInputChange","value","search","id","label","table","minWidth","UserTable","TableContainer","component","Paper","Table","size","aria-label","TableHead","TableRow","TableCell","align","onClick","handleSortFirst","handleSortLast","handleSortEmail","handleSortPhone","TableBody","tableOfUsers","filter","user","name","first","includes","last","email","cell","map","row","scope","src","picture","thumbnail","alt","axios","get","App","useState","users","setUsers","setSearch","useEffect","API","then","res","data","results","Container","event","target","sortedUsers","sort","a","b","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0506c15f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function NavBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            User Directory\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SearchField(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form className={classes.root} noValidate autoComplete=\"off\">\r\n      <TextField onChange={props.handleInputChange} value= {props.search} id=\"outlined-basic\" \r\n      label=\"Search\" variant=\"outlined\" />\r\n    </form>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport SortIcon from '@material-ui/icons/Sort';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\n\r\nexport default function UserTable(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>User Directory</TableCell>\r\n            <TableCell align=\"right\" onClick={props.handleSortFirst} >First Name <SortIcon /> </TableCell>\r\n            <TableCell align=\"right\" onClick={props.handleSortLast} >Last Name <SortIcon /> </TableCell>\r\n            <TableCell align=\"right\" onClick={props.handleSortEmail}>Email <SortIcon /> </TableCell>\r\n            <TableCell align=\"right\" onClick={props.handleSortPhone}>Phone <SortIcon /> </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {props.tableOfUsers.filter((user) => user.name.first.includes(props.search) || \r\n          user.name.last.includes(props.search) || user.email.includes(props.search) || \r\n          user.cell.includes(props.search)).map((row) => (\r\n            <TableRow key={row.email}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <img src={row.picture.thumbnail} alt={row.name.last} />\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.name.first}</TableCell>\r\n              <TableCell align=\"right\">{row.name.last}</TableCell>\r\n              <TableCell align=\"right\">{row.email}</TableCell>\r\n              <TableCell align=\"right\">{row.cell}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nconst queryURL = 'https://randomuser.me/api/?results=25&nat=us';\r\n\r\nexport default {\r\n    getRandomUsers: () => {\r\n        return axios.get(queryURL);\r\n    }\r\n}","// import { Unstable_TrapFocus } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport NavBar from './components/NavBar';\nimport SearchField from './components/SearchField';\nimport UserTable from './components/UserTable';\nimport API from './utils/API';\nimport Container from '@material-ui/core/Container';\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  \n  useEffect(() => {\n    API.getRandomUsers().then((res) => {\n      setUsers(res.data.results);\n      \n    });\n  }, []);\n\n  const handleSortLast = () => {\n    const preSort = [...users]\n    const sortedUsers = preSort.sort((a,b) => a.name.last > b.name.last ? 1:-1);\n    setUsers(sortedUsers);\n  }\n  const handleSortFirst = () => {\n    const preSort = [...users]\n    const sortedUsers = preSort.sort((a,b) => a.name.first > b.name.first ? 1:-1);\n    setUsers(sortedUsers);\n  }\n  const handleSortPhone = () => {\n    const preSort = [...users]\n    const sortedUsers = preSort.sort((a,b) => a.cell > b.cell ? 1:-1);\n    setUsers(sortedUsers);\n  }\n  const handleSortEmail = () => {\n    const preSort = [...users]\n    const sortedUsers = preSort.sort((a,b) => a.email > b.email ? 1:-1);\n    setUsers(sortedUsers);\n  }\n\n  const handleInputChange = (event) => {\n      let value = event.target.value;\n      setSearch(value);\n  }\n\n  return (\n    <div className=\"App\">\n      <Container >   \n        <NavBar />\n        <SearchField handleInputChange={handleInputChange} search= {search} />\n        <UserTable tableOfUsers={ users } search= {search} handleSortLast={ handleSortLast } \n        handleSortFirst= {handleSortFirst} handleSortPhone= {handleSortPhone} \n        handleSortEmail= {handleSortEmail} />\n     </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}